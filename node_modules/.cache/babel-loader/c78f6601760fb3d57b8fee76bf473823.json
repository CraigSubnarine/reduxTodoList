{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CraigS\\\\Documents\\\\testProjects\\\\redux-todo\\\\src\\\\components\\\\ThemeChanger.js\";\nimport React from \"react\";\nimport { Themes, setTheme } from \"../actions\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ThemeChanger() {\n  const dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Themes: \"), React.createElement(\"button\", {\n    onClick: dispatch(setTheme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Light\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Dark\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Green\"));\n}\n\nexport default ThemeChanger;","map":{"version":3,"sources":["C:\\Users\\CraigS\\Documents\\testProjects\\redux-todo\\src\\components\\ThemeChanger.js"],"names":["React","Themes","setTheme","useSelector","useDispatch","ThemeChanger","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;AAIA,SAASC,YAAT,GAAwB;AACpB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,OAAO,EAAEE,QAAQ,CAACJ,QAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ;AAQH;;AAED,eAAeG,YAAf","sourcesContent":["import React from \"react\";\r\nimport {Themes, setTheme} from \"../actions\"\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\n\r\n\r\nfunction ThemeChanger (){\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <div>\r\n            <span>Themes: </span>\r\n            <button onClick={dispatch(setTheme)}>Light</button>\r\n            <button>Dark</button>\r\n            <button>Green</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeChanger;\r\n"]},"metadata":{},"sourceType":"module"}