{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\CraigS\\\\Documents\\\\testProjects\\\\redux-todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport cookie from 'react-cookies';\nlet todoList = cookie.load('Todos');\n\nif (todoList === undefined) {\n  todoList = [];\n}\n\nconst todos = (state = todoList, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      let newTodo = [...state, {\n        id: action.id,\n        text: action.text,\n        completed: false\n      }];\n      cookie.save('Todos', action.theme, {\n        path: '/'\n      });\n      return newTodo;\n\n    case 'TOGGLE_TODO':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        completed: !todo.completed\n      }) : todo);\n\n    case 'DELETE_TODO':\n      return state.filter(todo => action.id !== todo.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["C:\\Users\\CraigS\\Documents\\testProjects\\redux-todo\\src\\reducers\\todos.js"],"names":["cookie","todoList","load","undefined","todos","state","action","type","newTodo","id","text","completed","save","theme","path","map","todo","filter"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,IAAIC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAY,OAAZ,CAAf;;AAEA,IAAGD,QAAQ,KAAKE,SAAhB,EAA0B;AACxBF,EAAAA,QAAQ,GAAG,EAAX;AACD;;AAGD,MAAMG,KAAK,GAAG,CAACC,KAAK,GAAGJ,QAAT,EAAmBK,MAAnB,KAA8B;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,UAAIC,OAAO,GAAI,CACb,GAAGH,KADU,EAEb;AACEI,QAAAA,EAAE,EAAEH,MAAM,CAACG,EADb;AAEEC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFa,CAAf;AAQAX,MAAAA,MAAM,CAACY,IAAP,CAAY,OAAZ,EAAqBN,MAAM,CAACO,KAA5B,EAAmC;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAnC;AACA,aAAON,OAAP;;AACF,SAAK,aAAL;AACE,aAAOH,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAKA,IAAI,CAACP,EAAL,KAAYH,MAAM,CAACG,EAApB,qBAA8BO,IAA9B;AAAoCL,QAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAArD,WAAkEK,IAApF,CAAP;;AACF,SAAK,aAAL;AACE,aAAOX,KAAK,CAACY,MAAN,CAAaD,IAAI,IAAIV,MAAM,CAACG,EAAP,KAAYO,IAAI,CAACP,EAAtC,CAAP;;AACF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD,CApBH;;AAsBE,eAAeD,KAAf","sourcesContent":["import cookie from 'react-cookies'\r\n\r\nlet todoList = cookie.load('Todos');\r\n\r\nif(todoList === undefined){\r\n  todoList = []\r\n}\r\n\r\n\r\nconst todos = (state = todoList, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        let newTodo =  [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false\r\n          }\r\n        ]\r\n        cookie.save('Todos', action.theme, {path:'/'})\r\n        return newTodo\r\n      case 'TOGGLE_TODO':\r\n        return state.map(todo => (todo.id === action.id) ? {...todo, completed: !todo.completed} : todo)\r\n      case 'DELETE_TODO':\r\n        return state.filter(todo =>(action.id!==todo.id))\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default todos\r\n  "]},"metadata":{},"sourceType":"module"}